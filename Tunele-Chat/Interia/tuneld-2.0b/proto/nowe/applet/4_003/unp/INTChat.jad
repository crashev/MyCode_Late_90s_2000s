// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   INTChat.java

import a.*;
import b.c;
import d.n;
import d.x;
import java.applet.Applet;
import java.awt.*;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.io.InputStream;
import java.io.PrintStream;
import java.net.*;
import netscape.javascript.JSObject;

public class INTChat extends Applet
    implements ComponentListener, Runnable
{

    public void stop()
    {
label0:
        {
            if(r.length() <= 1 || r.indexOf(a("SB\013/")) > -1)
            {
                K = true;
                if(T == 0)
                    break label0;
            }
            if(d == null && b != null)
            {
                d = new Thread(this, a("Chat-Killing-Thread"));
                d.start();
            }
        }
    }

    public void componentShown(ComponentEvent componentevent)
    {
    }

    public String getHTMLPage(String s1, int i1)
    {
        return getHTMLPage(getHTMLAddres(s1, i1), null, true, false);
    }

    public String getHTMLPage(String s1, int i1, boolean flag)
    {
        return getHTMLPage(getHTMLAddres(s1, i1), null, true, flag);
    }

    public String getHTMLPage(String s1, p p1, boolean flag)
    {
        return getHTMLPage(s1, p1, flag, false);
    }

    public String getHTMLPage(String s1, p p1, boolean flag, boolean flag1)
    {
        URL url;
        int i2;
        i2 = T;
        try
        {
            url = new URL(s1);
        }
        catch(MalformedURLException _ex)
        {
            System.out.println(a("P^\026jAQD\f.\035\036") + s1);
            return "";
        }
        InputStream inputstream;
        int i1;
        byte abyte0[];
        int j1;
        URLConnection urlconnection = url.openConnection();
        urlconnection.setUseCaches(flag);
        inputstream = urlconnection.getInputStream();
        l = urlconnection.getDate();
        m = System.currentTimeMillis();
        i1 = urlconnection.getContentLength();
        if(i1 < 0)
            i1 = inputstream.available();
        j1 = 0;
        boolean flag2 = false;
        if(i1 < 0)
            break MISSING_BLOCK_LABEL_244;
        abyte0 = new byte[i1];
        if(i2 == 0) goto _L2; else goto _L1
_L1:
        3000;
_L8:
        i1 - j1;
        JVM INSTR icmpge 144;
           goto _L3 _L4
_L3:
        l1 = 3000;
          goto _L5
_L4:
        int l1 = i1 - j1;
_L5:
        int k1 = inputstream.read(abyte0, j1, l1);
        Thread.sleep(1L);
        if(k1 == -1 || p1 != null && !p1.a)
            return "";
        j1 += k1;
_L2:
        if(j1 < i1) goto _L1; else goto _L6
_L6:
        inputstream.close();
        flag1;
        if(i2 != 0) goto _L8; else goto _L7
_L7:
        String s2;
        if(flag1)
        {
            s2 = b.c.a(abyte0, j1);
            if(i2 == 0)
                break MISSING_BLOCK_LABEL_241;
        }
        s2 = a.r.b(abyte0, 0, j1);
        return s2;
        System.out.println(a("P^B&BP\013B") + s1);
        inputstream.close();
        return "";
        JVM INSTR pop ;
        if(s1.indexOf(a("tp4\013xjt1\036")) < 0)
            System.out.println(a("[C\020%U\036X\fj@[EXj") + s1);
        return "";
    }

    public void componentResized(ComponentEvent componentevent)
    {
label0:
        {
            if(b != null && !b.X)
            {
                refreshPanel();
                if(T == 0)
                    break label0;
            }
            g = 0;
        }
        f = true;
    }

    public void componentHidden(ComponentEvent componentevent)
    {
    }

    public void login(String s1, String s2)
    {
        b.a(s1, s2);
    }

    public long getServerTime()
    {
        if(m == 0L)
            return 123L;
        else
            return (l + System.currentTimeMillis()) - m;
    }

    public void showInfoText(String s1)
    {
        b.a(s1, false);
    }

    public void openHTMLWindow(String s1)
    {
        int i1 = s1.indexOf(a("VE\026:\035\021\036")); // http
        int j1 = s1.indexOf(a("XE\022p\b\021")); //ftp
        int k1 = s1.indexOf("@");
        try
        {
            String s2 = null;
            if(i1 == 0 || j1 == 0)
                s2 = s1;
            else
            if(k1 > 0)
                s2 = a("SP\013&SQ\013") + s1;
            else
                s2 = a("VE\026:\035\021\036") + s1;
            String as[] = {
                s2
            };
            jsFunction(a("QA\007$oj|.\035NPU\r="), as);
            if(b.bc != null && getParameter("banner_link_click") != null && s1.equals(b.bc.d))
                getHTMLPage(getParameter("banner_link_click") + "?login=" + s1, ((p) (null)), false);
        }
        catch(Exception exception)
        {
            exception.printStackTrace();
        }
    }

    public void update(Graphics g1)
    {
        paint(g1);
    }

    public void exitChat()
    {
label0:
        {
            if(a)
            {
                ((j)this).a(null);
                if(T == 0)
                    break label0;
            }
            jsFunction(a("]]\r9BnP\005/"), null);
        }
    }

    public void popupError()
    {
        System.out.println(a("\\]\003.\007\023\021\022%WKAB0F\\]\r!HIPL"));
    }

    public void start()
    {
label0:
        {
            K = false;
            if(d != null && b != null)
            {
                d = null;
                if(T == 0)
                    break label0;
            }
            if(c == null)
            {
                e = false;
                c = new Thread(this, a("Chat-GUI-Thread"));
                c.start();
            }
        }
    }

    void clearAll()
    {
        K = true;
        e = false;
        if(b != null)
            try
            {
                remove(b);
                b.a();
            }
            catch(Exception exception)
            {
                exception.printStackTrace();
            }
        if(Q != null)
            try
            {
                d.x.a();
            }
            catch(Exception exception1)
            {
                exception1.printStackTrace();
            }
    }

    public String getAppletInfo()
    {
        return a("\177A\016/S\036R\030+S_\021\f+WWB\003$^\036A\0200BD\021+$S[C\013+\tN]B\031\t\177\037h\"SJAXe\bIF\025dDDP\026/UWPL:K\036;\003?SQCX\001l\036\031\006+LQE\003c-");
/*
    Aplet czata napisany przez Interia.pl S.A.
    http://www.czateria.pl
    autor:KK (dakota)
*/
    }

    public static String getHTMLAddres(String s1, int i1)
    {
        if(i1 == 0)
            return C + s1;
        if(i1 == 1)
            return D + s1;
        if(i1 == 3)
            return G + s1;
        else
            return s1;
    }

    public void saveTalk(String s1, String s2)
    {
        String as[] = {
            s1, s2
        };
        jsFunction(a("MP\024/s_]\t"), as);
    }

    public Image downloadImage(String s1)
    {
        return downloadImage(s1, false, false);
    }

    int getINTAppletParameter(String s1)
    {
        if(getParameter(s1) != null)
            try
            {
                return Integer.parseInt(getParameter(s1));
            }
            catch(Exception _ex) { }
        return 0;
    }

    public Image downloadImage(String s1, boolean flag)
    {
        return downloadImage(s1, flag, false);
    }

    public Image downloadImage(String s1, boolean flag, boolean flag1)
    {
label0:
        {
            if(s1 == null)
                return null;
            if(s1.indexOf('\0') >= 0)
                return null;
            if(flag1)
            {
                s1 = H + s1;
                if(T == 0)
                    break label0;
            }
            s1 = F + s1;
        }
        s1 = a.r.k(s1);
        byte abyte0[] = getImageBytes(s1, true, flag1);
        if(abyte0 == null)
        {
            if(flag)
                abyte0 = getImageBytes(s1, false, flag1);
            if(abyte0 == null)
            {
                System.out.println(a("Z^\025$KQP\006\003J_V\007p\007") + s1 + a("\036\f_jIK]\016"));
                return null;
            }
        }
        Image image = Toolkit.getDefaultToolkit().createImage(abyte0);
        if(q > 1000)
            q = 0;
        if(image != null)
        {
            int i1 = q++;
            p.addImage(image, i1);
            try
            {
                p.waitForID(i1, 20000L);
            }
            catch(Exception _ex) { }
            if(!p.isErrorID(i1));
            p.removeImage(image, i1);
            return image;
        } else
        {
            System.out.println(s1 + a("\036\fB$RR]"));
            return null;
        }
    }

    public void browser(String s1)
    {
        r = s1;
    }

    void refreshPanel()
    {
        int i1 = T;
        u = getSize().width;
        v = getSize().height;
        u = u >= 343 ? u : 343;
        v = v >= 129 ? v : 129;
        if(b != null)
            b.setBounds(0, 0, u, v);
        f = false;
        if(i.i)
            T = ++i1;
    }

    public void openHelp(String s1)
    {
        String as[] = {
            s1
        };
        jsFunction(a("QA\007$o[]\022\035NPU\r="), as);
    }

    public void updateProgress(int i1)
    {
        I = i1;
        repaint((u - 390) / 2, (v - 100) / 2 + 30, 390, 60);
    }

    void updateProgress(int i1, String s1)
    {
        o = s1;
        updateProgress(i1);
    }

    public void setSizeXY(int i1, int j1)
    {
        if(i1 > s)
            i1 = s;
        if(j1 > t)
            j1 = t;
        g = 0;
        f = true;
    }

    public void paint(Graphics g1)
    {
        u = getSize().width;
        v = getSize().height;
        if(b != null && b.X && n.Z && b.W)
            return;
        if(O == null || P == null)
        {
            O = createImage(410, 100);
            P = O.getGraphics();
        }
        P.setColor(L[1]);
        P.fill3DRect(0, 0, 410, 100, true);
        P.setColor(L[2]);
        P.drawRect(5, 5, 400, 90);
        P.setColor(L[4]);
        P.setFont(M);
        N = P.getFontMetrics();
        if(n != null)
            P.drawString(n, (410 - N.stringWidth(n)) / 2, 22);
        if(o != null)
            P.drawString(o, (410 - N.stringWidth(o)) / 2, 50);
        P.setColor(L[3]);
        P.drawRect(10, 70, 390, 19);
        P.fill3DRect(10, 70, (390 * I) / 100, 20, true);
        g1.drawImage(O, (u - 410) / 2, (v - 100) / 2, null);
    }

    public INTChat()
    {
        int i1 = T;
        super();
        b = null;
        c = null;
        d = null;
        e = false;
        f = false;
        g = 0;
        h = 0;
        i = 50L;
        k = 0;
        l = 0L;
        m = 0L;
        n = a("jC\025+\007IR\0303SGF\003$N[\021\003:K[E\027jddp6\017uwpBy\t\036a\020%TD\u0128B)][Z\003\u014D\007\020\037L");
	    /* Trwa wczytywanie apletu CZATERIA 3. Prosze czekac ...*/
        q = 0;
        r = "";
        I = 0;
        J = false;
        K = false;
        S = -1L;
        if(i1 != 0)
            i.i = !i.i;
    }

    public void destroy()
    {
        if(O != null)
            O.flush();
        System.runFinalization();
        System.gc();
    }

    byte[] getImageBytes(String s1, boolean flag, boolean flag1)
    {
        URL url;
        int k1;
        k1 = T;
        try
        {
            url = new URL(s1);
        }
        catch(MalformedURLException _ex)
        {
            return null;
        }
        InputStream inputstream;
        int i1;
        int j1;
        byte abyte0[];
        URLConnection urlconnection;
label0:
        {
            urlconnection = url.openConnection();
            urlconnection.setUseCaches(flag);
            if(!flag1)
                break label0;
            String s2 = urlconnection.getHeaderField(a("zP\026/")); //Date
            if(s2 != null)
                S = a.r.b(s2);
            if(S <= 0L)
                break label0;
            S /= 10000L;
            long l1 = S % 10L;
            S /= 10L;
            S *= 10L;
            if(l1 > 5L)
            {
                S += 2L;
                if(k1 == 0)
                    break label0;
            }
            if(l1 > 2L)
                S++;
        }
        inputstream = urlconnection.getInputStream();
        i1 = urlconnection.getContentLength();
        if(i1 < 0)
            i1 = inputstream.available();
        j1 = 0;
        if(i1 < 0)
        {
            inputstream.close();
            return null;
        }
        abyte0 = new byte[i1];
        if(k1 == 0) goto _L2; else goto _L1
_L1:
        j1 += inputstream.read(abyte0, j1, i1 - j1);
_L4:
        Thread.sleep(3L);
_L2:
        if(j1 < i1)
            continue; /* Loop/switch isn't completed */
        inputstream.close();
        if(k1 == 0)
            return abyte0;
        if(true) goto _L4; else goto _L3
_L3:
        if(true) goto _L1; else goto _L5
_L5:
        Exception exception;
        exception;
        exception.printStackTrace();
        return null;
    }

    public void insertImage(String s1)
    {
        b.b(s1);
    }

    public String getUserLogin()
    {
        return b.bn;
    }

    public static String getServerHost()
    {
        return E;
    }

    public void jsFunction(String s1, Object aobj[])
    {
        if(!r.w)
            try
            {
                Class class1 = Class.forName(a("PT\0269D_A\007dM_G\0039DLX\022>\ttb-(M[R\026"));
		// netscape.javascript.JSObject
                if(class1 != null && !a)
                {
                    JSObject jsobject = JSObject.getWindow((Applet)this);
                    if(jsobject != null)
                    {
                        jsobject.call(s1, aobj);
                        jsobject = null;
                    }
                }
            }
            catch(Exception _ex) { }
    }

    public void openInfoPhoneActivateWindow(String s1, String s2)
    {
        String as[] = {
            s1, s2
        };
        jsFunction(a("QA\007$wV^\f/pW_\006%P"), as); // OpenPhoneWindow
    }

    public void run()
    {
        int i1;
        i1 = T;
        if(e)
            break MISSING_BLOCK_LABEL_1185;
        e = true;
        refreshPanel();
        String s1 = getDocumentBase().getHost();
	// .w.interia.pl
	// .fm.interia.pl
	// interia.pl
	//czateria.pl itd.
        if(s1.endsWith(a("\020FL#IJT\020#F\020A\016")) || s1.endsWith(a("\020W\017dNPE\0078N_\037\022&")) || !s1.endsWith(a("W_\026/UWPL:K")) && !s1.endsWith(a("]K\003>BLX\003dWR")) && !s1.equals(a("MA\013.BL\037\013$S[C\013+IWT")))
        {
            n = a("\177S\033j]_]\r-HIP\u0165jTW\u0128B.H\036r\030+S[C\013#\013\036_\003&B\u0142HB9LQC\0303TJP\u0165j][\021\021>UQ_\033p");
	    // Aby zalogowac sie do czateri nalezy skorzystac ze strony:
            updateProgress(100, a("IF\025dDDP\026/UWPL#IJT\020#F\020A\016j\007RD\000j\007IF\025dDDP\026/UWPL:K"));
	    // www.czateria.interia.pl lub www.czateria.pl
            repaint();
            return;
        }
        updateProgress(2, a("jF\r8][_\013/\007QS\013/LJ\302\025"));
	// Tworzenie obiektow
        p = new MediaTracker(this);
        if(Q == null)
            Q = new x(this);
        updateProgress(4);
        Q.e();
        updateProgress(10);
        if(R == null)
            R = new r();
        updateProgress(12);
        b = new n(this);
        updateProgress(20);
        b.c();
        updateProgress(27, a("iR\0303SGF\003$N[\021\022+U_\\\007>U\315F"));
	// Wczytywanie parametrow
        b.j();
        updateProgress(30);
        jsFunction(a("\\C\r=T[C"), null); // browser
        if(getParameter("nick") != null && getParameter("pass") != null)
            login(getParameter("nick"), getParameter("pass"));
	    // login(nick,pass)
        Image image = downloadImage(a("VT\003.Ta\003L-NX"), true);
        updateProgress(33);
        d.x.b(image);
        updateProgress(36);
	// banner_img
        if(getParameter("banner_img") != null && getParameter("banner_img").length() > 0)
        {
            Image image1 = downloadImage(getParameter("banner_img"), true);
            if(image1 != null)
            {
                u u1 = new u();
                u1.a = image1;
                u1.d = getParameter("banner_link")); 
                u1.b = getINTAppletParameter("banner_align");
                u1.c = getINTAppletParameter("banner_move_align"));
                u1.e = (getINTAppletParameter("banner_time_sec")) * 1000) / (int)i;
                if(getParameter("banner_stats_link")) != null)
                    getHTMLPage(getParameter("banner_stats_link")) + "?h=" + u1.d, ((p) (null)), false);
		//banner_stats_link i ?h=
                b.bc = u1;
                updateProgress(42);
            }
        }
	// bg_img
        if(getParameter("bg_img") != null && getParameter("bg_img").length() > 0)
        {
            b.bd = downloadImage(getParameter(bg_img")), true);
            b.be = getINTAppletParameter("bg_align"));
        }
        refreshPanel();
        updateProgress(45);
        b.setVisible(false);
        add(b);
        updateProgress(46);
        b.m();

        updateProgress(47, "trwa nawiazywanie polaczenia z serwerem ...");
_L15:
        if(b == null || b.X && b.W) goto _L2; else goto _L1
_L1:
        if(i1 == 0) goto _L4; else goto _L3
_L3:
        try
        {
            Thread.sleep(200L);
        }
        catch(Exception _ex) { }
_L4:
        if(b == null)
            break; /* Loop/switch isn't completed */
        b.X;
        if(i1 != 0 || i1 != 0) goto _L6; else goto _L5
_L5:
        if(!b.X && !K) goto _L3; else goto _L7
_L7:
        if(b == null) goto _L9; else goto _L8
_L8:
        K;
_L6:
        JVM INSTR ifeq 755;
           goto _L9 _L10
_L9:
        if(i1 == 0)
            break; /* Loop/switch isn't completed */
_L10:
        b.setVisible(false);
        try
        {
            Thread.sleep(300L);
        }
        catch(Exception _ex) { }
        repaint();
        String s2 = getParameter("predefined_skin"); // predefined_skin
        if(s2 != null && s2.length() > 5)
            b.U = d.x.d() - 1;
        updateProgress(53, "Wczytywanie obrazku skorki");
        if(!n.Z || n.V != b.U)
        {
            Image image2 = d.x.b(b.U);
            updateProgress(60, a("Generowanie komponentow skorki"));
            if(image2 == null)
            {
                n = a("Wystapil problem z wczytywaniem niezbednych plikow graficznych");
                updateProgress(63, "Prosze wyczyscic cache przegladarki i sprobowac ponownie"));
                repaint();
                return;
            }
            d.x.a(image2);
            updateProgress(75, "Przerysowanie skorki"));
            d.x.c();
            updateProgress(85, "Ustawianie kolorow");
            d.x.a(b.U);
            updateProgress(90, "Podmiana skorki");
            n.V = b.U;
        }
        b.l();
        updateProgress(95, "Ustawianie komponentow");
        refreshPanel();
        b.k();
        updateProgress(100, null);
        b.setVisible(true);
_L2:
        j = System.currentTimeMillis();
_L17:
        if(!f) goto _L12; else goto _L11
_L11:
        if(g >= 4)
            refreshPanel();
        g++;
        if(i1 == 0) goto _L13; else goto _L12
_L12:
        if(d == null && b != null)
            b.a(j);
_L13:
        j = (i - System.currentTimeMillis()) + j;
        if(j <= 0L)
            j = 1L;
        if(k <= 0)
        {
            System.gc();
            k = 800;
        }
        k--;
        try
        {
            if(c != null)
                Thread.sleep(j);
        }
        catch(Exception _ex) { }
        if(c != null && !K) goto _L15; else goto _L14
_L14:
        if(i1 != 0) goto _L17; else goto _L16
_L16:
        break MISSING_BLOCK_LABEL_1176;
        Exception exception;
        exception;
        exception.printStackTrace();
        clearAll();
        if(i1 == 0)
            break MISSING_BLOCK_LABEL_1211;
        try
        {
            Thread.sleep(1500L);
        }
        catch(Exception exception1)
        {
            exception1.printStackTrace();
        }
        if(d != null)
            K = true;
    }

    public void componentMoved(ComponentEvent componentevent)
    {
    }

    public void init()
    {
        System.out.println(a("]K\003>xH\037Vd\027a\001Ry"));
        if(d != null)
            return;
        H = getCodeBase();
        D = H.toString();
        E = a ? a("OP\fdNPE\0078N_\037\022&") : H.getHost();
        if(getParameter("prefix_html_pages")) != null)
            C = getParameter("prefix_html_pages");
        if(getParameter("simpleMode")) != null)
            n = a("Trwa wczytywanie appletu. Prosze czekac ...");
        if(getParameter("prefix_img")) != null)
            F = getParameter("prefix_img");
        if(getParameter("prefix_rooms")) != null)
            G = getParameter("prefix_rooms"));
        setLayout(null);
        refreshPanel();
        s = u;
        t = v;
        try
        {
            L[0] = new Color(Integer.parseInt(getParameter("color_black")), 16));
            L[1] = new Color(Integer.parseInt(getParameter(a("]^\016%UaA\003$BRn\000+DU")), 16));
            L[2] = new Color(Integer.parseInt(getParameter(a("]^\016%UaA\003$BRn\016#I[")), 16));
            L[3] = new Color(Integer.parseInt(getParameter(a("]^\016%UaA\020%@LT\0219")), 16));
            L[4] = new Color(Integer.parseInt(getParameter(a("]^\016%UaA\003$BRn\026/_J")), 16));
        }
        catch(Exception _ex) { }
        setBackground(L[0]);
        addComponentListener(this);
    }

    private static String a(String s1)
    {
        char ac[] = s1.toCharArray();
        int i1 = ac.length;
        int k1;
        for(int j1 = 0; j1 < i1; j1++)
        {
            switch(j1 % 5)
            {
            case 0: // '\0'
                k1 = 0x3e;
                break;

            case 1: // '\001'
                k1 = 49;
                break;

            case 2: // '\002'
                k1 = 98;
                break;

            case 3: // '\003'
                k1 = 74;
                break;

            default:
                k1 = 39;
                break;
            }
            ac[j1] ^= k1;
        }

        return new String(ac);
    }

    static boolean a = false;
    n b;
    Thread c;
    Thread d;
    boolean e;
    boolean f;
    int g;
    int h;
    long i;
    long j;
    int k;
    public long l;
    public long m;
    String n;
    String o;
    MediaTracker p;
    int q;
    String r;
    int s;
    int t;
    int u;
    int v;
    static final int w = 343;
    static final int x = 129;
    public static final int y = 0;
    public static final int z = 1;
    public static final int A = 2;
    public static final int B = 3;
    static String C = a("VE\026:\035\021\036\023+I\020X\f>BLX\003dWR\036\003:WRT\026y\b");
    static String D;
    static String E;
    static String F = a("VE\026:\035\021\036\023+I\020X\f>BLX\003dWR\013S~\027\016\000M#JY\036");
    static String G = a("VE\026:\035\021\036\023+I\020X\f>BLX\003dWR\013S~\027\016\000M");
    static URL H;
    int I;
    boolean J;
    boolean K;
    public static Color L[] = {
        new Color(97, 199, 239), new Color(0, 130, 194), new Color(97, 199, 233), new Color(243, 174, 32), new Color(255, 255, 255)
    };
    static final Font M = new Font(a("hT\020.FPP"), 1, 12);
    FontMetrics N;
    Image O;
    Graphics P;
    static x Q = null;
    static r R;
    public long S;
    public static int T;

}
