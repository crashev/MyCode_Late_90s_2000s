// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   d.java

package a;

import java.awt.*;
import java.awt.event.MouseEvent;

// Referenced classes of package a:
//            a, o, r

public class d extends a
{

    public void a(boolean flag)
    {
label0:
        {
label1:
            {
                if(flag == w)
                    break label0;
                w = flag;
                if(v == null)
                    break label1;
                if(w)
                {
                    v.a(this);
                    if(!a.q)
                        break label1;
                }
                v.a(null);
            }
            repaint();
        }
    }

    public boolean d()
    {
        return w;
    }

    public void mousePressed(MouseEvent mouseevent)
    {
label0:
        {
            if(!w)
            {
                a(true);
                if(!a.q)
                    break label0;
            }
            if(v == null)
                a(false);
        }
        b();
        super.mousePressed(mouseevent);
    }

    public d(String s1, o o1, boolean flag)
    {
        this(o1, flag);
        a(s1);
    }

    public d(o o1, boolean flag)
    {
        super(true);
        v = o1;
        w = flag;
        if(w && v != null)
            v.a(this);
        super.m = a.r.a(0, 1, 0);
        super.o = Color.white;
    }

    public void mouseReleased(MouseEvent mouseevent)
    {
    }

    public void paint(Graphics g)
    {
label0:
        {
            if(super.l != null)
            {
                g.setColor(super.l);
                g.fillRect(0, 0, super.a, super.b);
            }
            int i = u == null ? 0 : u.x;
            int j = u == null ? 0 : u.y;
            if(!w && r != null)
            {
                g.drawImage(r, i, j, null);
                if(!a.q)
                    break label0;
            }
            if(w && s != null)
                g.drawImage(s, i, j, null);
        }
        if(t != null)
            g.drawImage(t, 6, 5, null);
        a(g, 17, 0);
    }

    public void a(Image image)
    {
        t = image;
        repaint();
    }

    public void mouseEntered(MouseEvent mouseevent)
    {
    }

    public void mouseExited(MouseEvent mouseevent)
    {
    }

    public void a(Image aimage[])
    {
        a(aimage[0], aimage[1]);
    }

    void a(Image image, Image image1)
    {
        r = image;
        s = image1;
    }

    public void a(int i, int j)
    {
        u = new Point(i, j);
    }

    Image r;
    Image s;
    Image t;
    Point u;
    o v;
    boolean w;
}
