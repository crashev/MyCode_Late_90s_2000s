// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   e.java

package a;

import java.awt.*;

// Referenced classes of package a:
//            d, a, r, o

public class e extends d
{

    public void a(Graphics g)
    {
label0:
        {
            if(!super.w && z != null)
            {
                a(g, z, x, y);
                if(a.q == 0)
                    break label0;
            }
            if(super.w && A != null)
                a(g, A, x, y);
        }
        a(g, super.t != null ? x + super.t.getWidth(null) / 2 : x, y);
    }

    public e(String s, o o, boolean flag)
    {
        super(s, o, flag);
        super.p = 2;
    }

    public e(o o, boolean flag)
    {
        super(o, flag);
        super.p = 2;
    }

    public void paint(Graphics g)
    {
label0:
        {
label1:
            {
                int i = a.q;
                if(super.b <= 0 || super.a <= 0)
                    break label0;
                if(z == null && A == null)
                {
                    if(super.l != null)
                    {
                        g.setColor(super.l);
                        g.fillRect(0, 0, super.a, super.b);
                    }
                    r.a(g, 0, 0, super.a, super.b, true);
                    if(i == 0)
                        break label1;
                }
                if(!super.w && z != null)
                {
                    a(g, z, 0, 0);
                    if(i == 0)
                        break label1;
                }
                if(super.w && A != null)
                    a(g, A, 0, 0);
            }
            a(g, 0, 0);
        }
    }

    final void a(Graphics g, Image aimage[], int i, int j)
    {
        int k;
        int l;
        l = a.q;
        g.drawImage(aimage[0], i, j, null);
        k = 9;
        if(l == 0) goto _L2; else goto _L1
_L1:
        g.drawImage(aimage[1], i + k, j, null);
_L4:
        k += 9;
_L2:
        if(k < super.a - 18)
            continue; /* Loop/switch isn't completed */
        g.drawImage(aimage[1], (i + super.a) - 18, j, null);
        g.drawImage(aimage[2], (i + super.a) - 9, j, null);
        if(l == 0)
        {
            if(super.t != null)
                g.drawImage(super.t, i + 3, j + 5, null);
            return;
        }
        if(true) goto _L4; else goto _L3
_L3:
        if(true) goto _L1; else goto _L5
_L5:
    }

    public int a()
    {
        int i = super.a();
        if(super.t == null)
            return i;
        else
            return i + super.t.getWidth(null);
    }

    public void a(Image aimage[][])
    {
        a(aimage[0], aimage[1]);
    }

    public void a(Image aimage[], Image aimage1[])
    {
        z = aimage;
        A = aimage1;
    }

    public void setBounds(int i, int j, int k, int l)
    {
        x = i;
        y = j;
        super.setBounds(i, j, k, l);
    }

    public boolean c(Color color)
    {
        if(super.o != color)
        {
            super.o = color;
            return true;
        } else
        {
            return false;
        }
    }

    public int x;
    public int y;
    private Image z[];
    private Image A[];
}
